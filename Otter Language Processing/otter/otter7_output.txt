----- Otter 3.3f, August 2004 -----
The process was started by josh on joshlaptop,
Sun Feb 23 23:55:06 2020
The command was "./otter-3.3f/bin-Linux/otter".  The process ID is 2494.

set(ur_res).
set(hyper_res).

formula_list(usable).
Good(Link).
Good(Zelda).
Good(Ganondorf).
Evil(Octorock).
Evil(IronKnuckle).
Evil(Poe).
Weapon(Bow).
Weapon(Sword).
Weapon(Magic).
-Fight(Ganondorf,Octorock).
-UsedAgainst(IronKnuckle,Magic).
Fight(Zelda,Octorock).
Used(Link,Sword).
-Fight(Link,Poe).
Used(Zelda,Bow).
all x y (Fight(x,y)->Good(x)&Evil(y)).
all x y (Fight(x,y)-> (all z (-Fight(z,y)|x=z))).
all x y (Fight(x,y)-> (all z (-Fight(x,z)|y=z))).
all x y (Used(x,y)-> (all z (-Used(z,y)|x=z))).
all x y (Used(x,y)-> (all z (-Used(x,z)|y=z))).
all x (Good(x)-> (exists y Fight(x,y))).
all x (Good(x)-> (exists y (Weapon(y)&Used(x,y)))).
all y (Evil(y)-> (exists x Fight(x,y))).
all y (Evil(y)-> (exists x (Weapon(x)&UsedAgainst(y,x)))).
all x y z (Fight(x,y)&Used(x,z)->UsedAgainst(y,z)).
end_of_list.

-------> usable clausifies to:

list(usable).
1 [] Good(Link).
2 [] Good(Zelda).
3 [] Good(Ganondorf).
4 [] Evil(Octorock).
5 [] Evil(IronKnuckle).
6 [] Evil(Poe).
7 [] Weapon(Bow).
8 [] Weapon(Sword).
9 [] Weapon(Magic).
10 [] -Fight(Ganondorf,Octorock).
11 [] -UsedAgainst(IronKnuckle,Magic).
12 [] Fight(Zelda,Octorock).
13 [] Used(Link,Sword).
14 [] -Fight(Link,Poe).
15 [] Used(Zelda,Bow).
16 [] -Fight(x,y)|Good(x).
17 [] -Fight(x,y)|Evil(y).
18 [] -Fight(x,y)| -Fight(z,y)|x=z.
19 [] -Fight(x,y)| -Fight(x,z)|y=z.
20 [] -Used(x,y)| -Used(z,y)|x=z.
21 [] -Used(x,y)| -Used(x,z)|y=z.
22 [] -Good(x)|Fight(x,$f1(x)).
23 [] -Good(x)|Weapon($f2(x)).
24 [] -Good(x)|Used(x,$f2(x)).
25 [] -Evil(y)|Fight($f3(y),y).
26 [] -Evil(y)|Weapon($f4(y)).
27 [] -Evil(y)|UsedAgainst(y,$f4(y)).
28 [] -Fight(x,y)| -Used(x,z)|UsedAgainst(y,z).
end_of_list.

formula_list(sos).
-(exists x (-$answer(Fight(x,Poe))&Fight(x,Poe))).
-(exists x (-$answer(Fight(x,IronKnuckle))&Fight(x,IronKnuckle))).
end_of_list.

-------> sos clausifies to:

list(sos).
29 [] $answer(Fight(x,Poe))| -Fight(x,Poe).
30 [] $answer(Fight(x,IronKnuckle))| -Fight(x,IronKnuckle).
end_of_list.

======= end of input processing =======

=========== start of search ===========

given clause #1: (wt=3) 29 [] $answer(Fight(x,Poe))| -Fight(x,Poe).
** KEPT (pick-wt=2): 31 [ur,29,25] $answer(Fight($f3(Poe),Poe))| -Evil(Poe).

----> UNIT CONFLICT at   0.00 sec ----> 32 [binary,31.1,6.1] $answer(Fight($f3(Poe),Poe)).

Length of proof is 1.  Level of proof is 1.

---------------- PROOF ----------------

6 [] Evil(Poe).
25 [] -Evil(y)|Fight($f3(y),y).
29 [] $answer(Fight(x,Poe))| -Fight(x,Poe).
31 [ur,29,25] $answer(Fight($f3(Poe),Poe))| -Evil(Poe).
32 [binary,31.1,6.1] $answer(Fight($f3(Poe),Poe)).

------------ end of proof -------------


Search stopped by max_proofs option.

============ end of search ============

-------------- statistics -------------
clauses given                  1
clauses generated              1
  hyper_res generated          0
  ur_res generated             1
demod & eval rewrites          0
clauses wt,lit,sk delete       0
tautologies deleted            0
clauses forward subsumed       0
  (subsumed by sos)            0
unit deletions                 0
factor simplifications         0
clauses kept                   1
new demodulators               0
empty clauses                  1
clauses back demodulated       0
clauses back subsumed          0
usable size                   29
sos size                       2
demodulators size              0
passive size                   0
hot size                       0
Kbytes malloced              976

----------- times (seconds) -----------
user CPU time          0.00          (0 hr, 0 min, 0 sec)
system CPU time        0.00          (0 hr, 0 min, 0 sec)
wall-clock time        0             (0 hr, 0 min, 0 sec)

That finishes the proof of the theorem.

Process 2494 finished Sun Feb 23 23:55:06 2020
